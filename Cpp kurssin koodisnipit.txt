FOR JA WHILE
---------
// for-lause perusrakenne
for (alku; ehto; muutos) {
  // toistolohko
}

// Tulostaa luvut 1-10
for (int i = 1; i <= 10; i++) {
  std::cout << i << std::endl;}

int i = 1;
while (i <= 10) {
  std::cout << i << std::endl;
  i++;
}


========
ALIOHJELMA

/* Aliohjelma joka suorittaa jotain (Action)
void foo(int x, double y) {
  // Aliohjelman koodi
}

	// Aliohjelma joka palauttaa jonkin tuloksen (Function)
	int foo(int x, double y) {
	  return x + y;
	}

int main() {
  // Aliohjelman kutsu
  foo(1, 3.14);
    // Toinen tapa kutsua:
    //Tässä on esimerkki aliohjelman kutsusta, joka palauttaa kokonaisluvun:
    int x = foo(1, 3.14);

  //pääohjelman lopetus
  return 0;
}
*/
---------------
	ERI TIEDOSTOSSA
	
	C++:ssa aliohjelman luomiseksi eri tiedostossa, sinun on ensin luotava aliohjelman määritelmä tiedostoon, joka sisältää aliohjelman koodin. Tämä tehdään seuraavasti:

	C++
	// tiedosto: aliohjelma.cpp

	#include <iostream>

	void foo(int x, double y) {
	  // Aliohjelman koodi
	}
	Use code with caution. Learn more
	Seuraavaksi sinun on liitettävä tämä tiedosto tiedostoon, jossa aliohjelmaa kutsutaan. Tämä tehdään seuraavasti:

	C++
	// tiedosto: main.cpp

	#include <iostream>
	#include "aliohjelma.cpp"

	int main() {
	  // Aliohjelman kutsu
	  foo(1, 3.14);

	  return 0;
	}

========

continue:
	continue-lauseen käyttö ohjelman suorituksen aikana siirtyy välittömästi seuraavan iteraation alkuun silmukassa, kuten for, while tai do-while.
	continue-lauseen käyttö ohittaa kaikki muut komennot kyseisen iteraation kohdalla ja jatkaa seuraavaan iteraatioon.
break:
	break-lauseen käyttö keskeyttää lähimmän silmukan suorituksen kokonaan.
	Se siirtyy pois silmukan sisäisestä suorituksesta ja jatkaa ohjelman suoritusta seuraavasta käskyjen kohdasta sen ulkopuolella.

========
Modulo - jakojäännös

luku %2 = 0
0 = parillinen
1 = pariton

rand()
0..32767
	rand() %100
	-> 0..99 +1
	lukuja väliltä 1..100

Modulo ei ikinä voi olla yhtä suuri tai suurempi kuin sen luku

==============

srand(time(0));
alustaa satunnaislukugeneraattorin koneen kellonajalla

int luku { rand() % 100 };	// 

==============


set precision


std::string nimi;
std::cout << "Anna nimesi: ";
std::getline(std::cin, nimi);

if (nimi.empty()){
	std::cout << "Moro tuntematon\n";
	
============================
AND		OR	NOT
&&		||	!
============================
